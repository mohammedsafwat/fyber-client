//
//  ListOffersPresenter.swift
//  FyberClient
//
//  Created by Mohammed Safwat on 1/28/17.
//  Copyright (c) 2017 Mohammed Safwat. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit

protocol ListOffersPresenterInput {
    func presentFetchedOffers(response: ListOffers.FetchOffers.Response, error: OffersStoreError?)
}

protocol ListOffersPresenterOutput {
    func displayFetchedOffers(viewModel: ListOffers.FetchOffers.ViewModel)
}

class ListOffersPresenter: ListOffersPresenterInput {
    var output: ListOffersPresenterOutput!

    // MARK: - Presentation logic
    func presentFetchedOffers(response: ListOffers.FetchOffers.Response, error: OffersStoreError?) {
        var displayedOffers: [ListOffers.FetchOffers.ViewModel.DisplayedOffer] = []
        
        for offer in response.offers {
            let displayedOffer = ListOffers.FetchOffers.ViewModel.DisplayedOffer(offerTitle: offer.offerTitle, offerID: offer.offerID, offerTeaser: offer.offerTeaser, offerAction: offer.offerAction, offerLowResolutionThumbnailURL: offer.offerLowResolutionThumbnailURL, offerHighResolutionThmbnailURL: offer.offerHighResolutionThmbnailURL, offerPayoutAmount: offer.offerPayoutAmount)
            displayedOffers.append(displayedOffer)
        }
        
        var displayedError: ListOffers.FetchOffers.ViewModel.DisplayedError?
        if error != nil {
            displayedError = ListOffers.FetchOffers.ViewModel.DisplayedError(errorTitle: "Error", errorMessage: "An error happened while fetching the offers data. Please try again.")
        }
        let viewModel = ListOffers.FetchOffers.ViewModel(displayedOffers: displayedOffers, displayedError: displayedError)
        
        output.displayFetchedOffers(viewModel: viewModel)
    }
}
