//
//  ListOffersViewController.swift
//  FyberClient
//
//  Created by Mohammed Safwat on 1/28/17.
//  Copyright (c) 2017 Mohammed Safwat. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit
import SDWebImage

protocol ListOffersViewControllerInput {
    func displayFetchedOffers(viewModel: ListOffers.FetchOffers.ViewModel)
}

protocol ListOffersViewControllerOutput {
    func fetchOffers(request: ListOffers.FetchOffers.Request)
    var offers: [Offer]? { get }
}

class ListOffersViewController: UITableViewController, ListOffersViewControllerInput {
    var output: ListOffersViewControllerOutput!
    var router: ListOffersRouter!
    var displayedOffers: [ListOffers.FetchOffers.ViewModel.DisplayedOffer] = []
    var displayedError: ListOffers.FetchOffers.ViewModel.DisplayedError?
    
    var appId: String?
    var userId: String?
    var securityToken: String?
    
    // MARK: - Object lifecycle
    override func awakeFromNib() {
        super.awakeFromNib()
        self.title = Constants.ViewControllersTitles.listOffersViewControllerTitle
        ListOffersConfigurator.sharedInstance.configure(viewController: self)
        ListOffersConfigurator.sharedInstance.registerTableViewCell(tableView: tableView, cellName: Constants.ViewControllersTitles.listOffersTableViewCellName)
        ListOffersConfigurator.sharedInstance.configureTableViewSeparatorStyle(tableView: tableView, tableViewSeparatorStyle: .none)
        ListOffersConfigurator.sharedInstance.configureTableViewBackgroundColor(tableView: tableView, backgroundColor: Constants.OffersListTableView.tableViewBackgroundColor)
    }
  
    // MARK: - View lifecycle
    override func viewDidLoad() {
        super.viewDidLoad()
        ActivityIndicatorHelper.sharedInstance.displayActivityIndicator()
    }
  
    override func viewWillAppear(_ animated: Bool) {
        fetchOffersOnLoad()
    }
    
    // MARK: - Event handling
    func fetchOffersOnLoad() {
        // Ask the Interactor to fetch offers
        var request = ListOffers.FetchOffers.Request()
        request.appId = appId
        request.userId = userId
        request.securityToken = securityToken
        output.fetchOffers(request: request)
    }

    // MARK: - Display logic

    func displayFetchedOffers(viewModel: ListOffers.FetchOffers.ViewModel) {
        // Display the result from the Presenter
        displayedOffers = viewModel.displayedOffers
        
        ActivityIndicatorHelper.sharedInstance.stopActivityIndicator()
        if let displayedError = viewModel.displayedError {
            UIAlertsHelper.sharedInstance.displayAlert(viewController: self, alertTitle: displayedError.errorTitle, alertMessage: displayedError.errorMessage)
        }
        self.tableView.reloadData()
    }
    
    // MARK: - TableView Data Source
    override func numberOfSections(in tableView: UITableView) -> Int {
        return 1
    }
    
    override func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return displayedOffers.count
    }
    
    override func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let displayedOffer = displayedOffers[indexPath.row]
        var cell = tableView.dequeueReusableCell(withIdentifier: Constants.ViewControllersTitles.listOffersTableViewCellIdentifier) as? OfferTableViewCell
        if cell == nil {
            cell = UITableViewCell(style: .default, reuseIdentifier: Constants.ViewControllersTitles.listOffersTableViewCellIdentifier) as? OfferTableViewCell
        }
        if let offerHighResolutionThmbnailURL = displayedOffer.offerHighResolutionThmbnailURL {
            let imageURL = URL(string: offerHighResolutionThmbnailURL)
            cell?.offerImageView.sd_setImage(with: imageURL)
        }
        cell?.offerTitleLabel.text = displayedOffer.offerTitle
        cell?.offerTeaserLabel.text = displayedOffer.offerTeaser
        cell?.offerPayoutAmountLabel.text = String(displayedOffer.offerPayoutAmount)
        return cell!
    }
    
    override func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat {
        return Constants.OffersListTableView.cellHeight
    }
}
